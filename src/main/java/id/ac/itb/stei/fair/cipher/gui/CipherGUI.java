/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.ac.itb.stei.fair.cipher.gui;

import id.ac.itb.stei.fair.cipher.classic.PlayfairCipher;
import id.ac.itb.stei.fair.cipher.classic.VigenereCipher;
import id.ac.itb.stei.fair.cipher.classic.VigenereExtended;
import id.ac.itb.stei.fair.cipher.classic.VigenereStandard;
import java.io.File;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JFileChooser;
import javax.swing.SwingWorker;

/**
 *
 * @author USER
 */
public class CipherGUI extends javax.swing.JFrame {

    /**
     * Creates new form CipherGUI
     */
    public CipherGUI() {
	initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        VigenereInputButtonGroup = new javax.swing.ButtonGroup();
        VigenereModeButtonGroup = new javax.swing.ButtonGroup();
        VigenereTextStyleButtonGroup = new javax.swing.ButtonGroup();
        VigenereOutputButtonGroup = new javax.swing.ButtonGroup();
        PlayfairInputButtonGroup = new javax.swing.ButtonGroup();
        PlayfairModeButtonGroup = new javax.swing.ButtonGroup();
        PlayfairTextStyleButtonGroup = new javax.swing.ButtonGroup();
        PlayfairOutputButtonGroup = new javax.swing.ButtonGroup();
        VigenereTypeButtonGroup = new javax.swing.ButtonGroup();
        CipherFileChooser = new javax.swing.JFileChooser();
        VigextModeButtonGroup = new javax.swing.ButtonGroup();
        StegoPanel = new javax.swing.JTabbedPane();
        PlayfairScrollPane = new javax.swing.JScrollPane();
        PlayfairScrollPanel = new javax.swing.JPanel();
        PlayfairInputPanel = new javax.swing.JPanel();
        PlayfairInputLabel = new javax.swing.JLabel();
        PlayfairInputModeText = new javax.swing.JRadioButton();
        PlayfairInputModeFile = new javax.swing.JRadioButton();
        PlayfairInputScrollPane = new javax.swing.JScrollPane();
        PlayfairInputTextArea = new javax.swing.JTextArea();
        PlayfairModePanel = new javax.swing.JPanel();
        PlayfairModeLabel = new javax.swing.JLabel();
        PlayfairModeEncrypt = new javax.swing.JRadioButton();
        PlayfairModeDecrypt = new javax.swing.JRadioButton();
        PlayfairKeyPanel = new javax.swing.JPanel();
        PlayfairKeyLabel = new javax.swing.JLabel();
        PlayfairKeyTable = new javax.swing.JTable();
        PlayfairTextStylePanel = new javax.swing.JPanel();
        PlayfairTextStyleLabel = new javax.swing.JLabel();
        PlayfairStyleNoSpace = new javax.swing.JRadioButton();
        PlayfairStyleSplitByFive = new javax.swing.JRadioButton();
        PlayfairStyleSplitByTwo = new javax.swing.JRadioButton();
        PlayfairOutputPanel = new javax.swing.JPanel();
        PlayfairOutputLabel = new javax.swing.JLabel();
        PlayfairOutputText = new javax.swing.JRadioButton();
        PlayfairOutputFile = new javax.swing.JRadioButton();
        PlayfairOutputScrollPane = new javax.swing.JScrollPane();
        PlayfairOutputTextArea = new javax.swing.JTextArea();
        PlayfairExecutePanel = new javax.swing.JPanel();
        PlayfairExecuteButton = new javax.swing.JButton();
        VigenereScrollPane = new javax.swing.JScrollPane();
        VigenereScrollPanel = new javax.swing.JPanel();
        VigeneroInputPanel = new javax.swing.JPanel();
        VigenereInputLabel = new javax.swing.JLabel();
        VigenereInputModeText = new javax.swing.JRadioButton();
        VigenereInputModeFile = new javax.swing.JRadioButton();
        VigenereInputScrollPane = new javax.swing.JScrollPane();
        VigenereInputTextArea = new javax.swing.JTextArea();
        VigenereModePanel = new javax.swing.JPanel();
        VigenereModeLabel = new javax.swing.JLabel();
        VigenereModeEncrypt = new javax.swing.JRadioButton();
        VigenereModeDecrypt = new javax.swing.JRadioButton();
        VigenereKeyPanel = new javax.swing.JPanel();
        VigenereKeyLabel = new javax.swing.JLabel();
        VigenereKeyScrollPane = new javax.swing.JScrollPane();
        VigenereKeyTextArea = new javax.swing.JTextArea();
        VigenereTypePanel = new javax.swing.JPanel();
        VigenereTypeLabel = new javax.swing.JLabel();
        VigenereTypeStandard = new javax.swing.JRadioButton();
        VigenereTypeExtended = new javax.swing.JRadioButton();
        VigenereTextStylePanel = new javax.swing.JPanel();
        VigenereTextStyleLabel = new javax.swing.JLabel();
        VigenereStyleKeepFormat = new javax.swing.JRadioButton();
        VigenereStyleNoSpace = new javax.swing.JRadioButton();
        VigenereStyleSplitByFive = new javax.swing.JRadioButton();
        VigenereOutputPanel = new javax.swing.JPanel();
        VigenereOutputLabel = new javax.swing.JLabel();
        VigenereOutputText = new javax.swing.JRadioButton();
        VigenereOutputFile = new javax.swing.JRadioButton();
        VigenereOutputScrollPane = new javax.swing.JScrollPane();
        VigenereOutputTextArea = new javax.swing.JTextArea();
        VigenereExecutePanel = new javax.swing.JPanel();
        VigenereExecuteButton = new javax.swing.JButton();
        VigextScrollPane = new javax.swing.JScrollPane();
        VigextScrollPanel = new javax.swing.JPanel();
        VigextInputPanel = new javax.swing.JPanel();
        VigextInputLabel = new javax.swing.JLabel();
        VigextFileInputButton = new javax.swing.JButton();
        VigextFileInputTextField = new javax.swing.JTextField();
        VigextModePanel = new javax.swing.JPanel();
        VigextModeLabel = new javax.swing.JLabel();
        VigextModeEncrypt = new javax.swing.JRadioButton();
        VigextModeDecrypt = new javax.swing.JRadioButton();
        VigextKeyPanel = new javax.swing.JPanel();
        VigextKeyLabel = new javax.swing.JLabel();
        VigextKeyScrollPane = new javax.swing.JScrollPane();
        VigextKeyTextArea = new javax.swing.JTextArea();
        VigextOutputPanel = new javax.swing.JPanel();
        VigextOutputLabel = new javax.swing.JLabel();
        VigextFileOutputButton = new javax.swing.JButton();
        VigextFileOutputTextField = new javax.swing.JTextField();
        VigextExecutePanel1 = new javax.swing.JPanel();
        VigextExecuteButton1 = new javax.swing.JButton();
        VigextStatusTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        ImageViewPanel3 = new javax.swing.JPanel();
        StegoImagePanel3 = new javax.swing.JPanel();
        StegoImageLabel3 = new javax.swing.JLabel();
        StegoImageView3 = new javax.swing.JLabel();
        CoverImagePanel1 = new javax.swing.JPanel();
        CoverImageLabel1 = new javax.swing.JLabel();
        CoverImageView1 = new javax.swing.JLabel();
        InputPanel1 = new javax.swing.JPanel();
        InputLabel1 = new javax.swing.JLabel();
        TextInputPanel1 = new javax.swing.JPanel();
        TextInputLabel1 = new javax.swing.JLabel();
        TextInputButton1 = new javax.swing.JButton();
        TextInputInfo1 = new javax.swing.JTextField();
        CoverInputPanel2 = new javax.swing.JPanel();
        CoverInputLabel2 = new javax.swing.JLabel();
        CoverInputButton1 = new javax.swing.JButton();
        CoverInputInfo1 = new javax.swing.JTextField();
        KeyPanel1 = new javax.swing.JPanel();
        KeyLabel1 = new javax.swing.JLabel();
        VigextKeyScrollPane10 = new javax.swing.JScrollPane();
        KeyTextArea1 = new javax.swing.JTextArea();
        TresholdPanel1 = new javax.swing.JPanel();
        TresholdLabel1 = new javax.swing.JLabel();
        TresholdTextField1 = new javax.swing.JTextField();
        OptionsPanel1 = new javax.swing.JPanel();
        OptionsLabel1 = new javax.swing.JLabel();
        EncryptOptionCheckBox1 = new javax.swing.JCheckBox();
        CGCOptionCheckBox1 = new javax.swing.JCheckBox();
        MessageEmbeddingPanel1 = new javax.swing.JPanel();
        MessageEmbeddingLabel1 = new javax.swing.JLabel();
        SequentialRadioButton1 = new javax.swing.JRadioButton();
        RandomRadioButton1 = new javax.swing.JRadioButton();
        OutputPanel1 = new javax.swing.JPanel();
        OutputLabel1 = new javax.swing.JLabel();
        StegoInputPanel1 = new javax.swing.JPanel();
        StegoInputLabel1 = new javax.swing.JLabel();
        StegoInputButton1 = new javax.swing.JButton();
        StegoInputInfo1 = new javax.swing.JTextField();
        TextOutputPanel1 = new javax.swing.JPanel();
        TextOutputLabel1 = new javax.swing.JLabel();
        TextOutputButton1 = new javax.swing.JButton();
        TextOutputInfo1 = new javax.swing.JTextField();
        EncryptDecryptPanel1 = new javax.swing.JPanel();
        EncryptButton1 = new javax.swing.JButton();
        DecryptButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PlayfairScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        PlayfairInputLabel.setText("Configure Input");

        PlayfairInputButtonGroup.add(PlayfairInputModeText);
        PlayfairInputModeText.setSelected(true);
        PlayfairInputModeText.setText("Text");

        PlayfairInputButtonGroup.add(PlayfairInputModeFile);
        PlayfairInputModeFile.setText("File");
        PlayfairInputModeFile.setToolTipText("Fill the text area with the desired filepath");

        PlayfairInputTextArea.setColumns(20);
        PlayfairInputTextArea.setRows(3);
        PlayfairInputScrollPane.setViewportView(PlayfairInputTextArea);

        javax.swing.GroupLayout PlayfairInputPanelLayout = new javax.swing.GroupLayout(PlayfairInputPanel);
        PlayfairInputPanel.setLayout(PlayfairInputPanelLayout);
        PlayfairInputPanelLayout.setHorizontalGroup(
            PlayfairInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayfairInputModeFile)
                    .addComponent(PlayfairInputModeText)
                    .addComponent(PlayfairInputLabel))
                .addGap(18, 18, 18)
                .addComponent(PlayfairInputScrollPane)
                .addContainerGap())
        );
        PlayfairInputPanelLayout.setVerticalGroup(
            PlayfairInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayfairInputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PlayfairInputPanelLayout.createSequentialGroup()
                        .addComponent(PlayfairInputLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlayfairInputModeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlayfairInputModeFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayfairModeLabel.setText("Operation");

        PlayfairModeButtonGroup.add(PlayfairModeEncrypt);
        PlayfairModeEncrypt.setSelected(true);
        PlayfairModeEncrypt.setText("Encrypt");

        PlayfairModeButtonGroup.add(PlayfairModeDecrypt);
        PlayfairModeDecrypt.setText("Decrypt");

        javax.swing.GroupLayout PlayfairModePanelLayout = new javax.swing.GroupLayout(PlayfairModePanel);
        PlayfairModePanel.setLayout(PlayfairModePanelLayout);
        PlayfairModePanelLayout.setHorizontalGroup(
            PlayfairModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayfairModeDecrypt)
                    .addComponent(PlayfairModeLabel)
                    .addComponent(PlayfairModeEncrypt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PlayfairModePanelLayout.setVerticalGroup(
            PlayfairModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PlayfairModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairModeEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairModeDecrypt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayfairKeyLabel.setText("Encryption/Decryption Key");

        PlayfairKeyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"S", "T", "A", "N", "D"},
                {"E", "R", "C", "H", "B"},
                {"K", "F", "G", "I", "L"},
                {"M", "O", "P", "Q", "U"},
                {"V", "W", "X", "Y", "Z"}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PlayfairKeyTable.setColumnSelectionAllowed(true);

        javax.swing.GroupLayout PlayfairKeyPanelLayout = new javax.swing.GroupLayout(PlayfairKeyPanel);
        PlayfairKeyPanel.setLayout(PlayfairKeyPanelLayout);
        PlayfairKeyPanelLayout.setHorizontalGroup(
            PlayfairKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairKeyPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(PlayfairKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PlayfairKeyTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(PlayfairKeyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PlayfairKeyPanelLayout.setVerticalGroup(
            PlayfairKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairKeyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PlayfairKeyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayfairKeyTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayfairTextStyleLabel.setText("Output Text Style");

        PlayfairTextStyleButtonGroup.add(PlayfairStyleNoSpace);
        PlayfairStyleNoSpace.setSelected(true);
        PlayfairStyleNoSpace.setText("No Space");

        PlayfairTextStyleButtonGroup.add(PlayfairStyleSplitByFive);
        PlayfairStyleSplitByFive.setText("Split By 5");

        PlayfairTextStyleButtonGroup.add(PlayfairStyleSplitByTwo);
        PlayfairStyleSplitByTwo.setText("Split By 2");

        javax.swing.GroupLayout PlayfairTextStylePanelLayout = new javax.swing.GroupLayout(PlayfairTextStylePanel);
        PlayfairTextStylePanel.setLayout(PlayfairTextStylePanelLayout);
        PlayfairTextStylePanelLayout.setHorizontalGroup(
            PlayfairTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairTextStylePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayfairStyleSplitByTwo)
                    .addComponent(PlayfairStyleSplitByFive)
                    .addComponent(PlayfairTextStyleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlayfairStyleNoSpace))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        PlayfairTextStylePanelLayout.setVerticalGroup(
            PlayfairTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairTextStylePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PlayfairTextStyleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairStyleNoSpace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairStyleSplitByFive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairStyleSplitByTwo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayfairOutputLabel.setText("Configure Output");

        PlayfairOutputButtonGroup.add(PlayfairOutputText);
        PlayfairOutputText.setSelected(true);
        PlayfairOutputText.setText("Text");

        PlayfairOutputButtonGroup.add(PlayfairOutputFile);
        PlayfairOutputFile.setText("File");

        PlayfairOutputTextArea.setColumns(20);
        PlayfairOutputTextArea.setRows(3);
        PlayfairOutputScrollPane.setViewportView(PlayfairOutputTextArea);

        javax.swing.GroupLayout PlayfairOutputPanelLayout = new javax.swing.GroupLayout(PlayfairOutputPanel);
        PlayfairOutputPanel.setLayout(PlayfairOutputPanelLayout);
        PlayfairOutputPanelLayout.setHorizontalGroup(
            PlayfairOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PlayfairOutputFile)
                    .addComponent(PlayfairOutputText)
                    .addComponent(PlayfairOutputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PlayfairOutputScrollPane)
                .addContainerGap())
        );
        PlayfairOutputPanelLayout.setVerticalGroup(
            PlayfairOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PlayfairOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PlayfairOutputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PlayfairOutputPanelLayout.createSequentialGroup()
                        .addComponent(PlayfairOutputLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlayfairOutputText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlayfairOutputFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PlayfairExecuteButton.setText("Execute");
        PlayfairExecuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayfairExecuteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PlayfairExecutePanelLayout = new javax.swing.GroupLayout(PlayfairExecutePanel);
        PlayfairExecutePanel.setLayout(PlayfairExecutePanelLayout);
        PlayfairExecutePanelLayout.setHorizontalGroup(
            PlayfairExecutePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairExecutePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PlayfairExecuteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        PlayfairExecutePanelLayout.setVerticalGroup(
            PlayfairExecutePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairExecutePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PlayfairExecuteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PlayfairScrollPanelLayout = new javax.swing.GroupLayout(PlayfairScrollPanel);
        PlayfairScrollPanel.setLayout(PlayfairScrollPanelLayout);
        PlayfairScrollPanelLayout.setHorizontalGroup(
            PlayfairScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PlayfairInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PlayfairOutputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(PlayfairExecutePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PlayfairScrollPanelLayout.createSequentialGroup()
                .addComponent(PlayfairModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayfairKeyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PlayfairTextStylePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PlayfairScrollPanelLayout.setVerticalGroup(
            PlayfairScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlayfairScrollPanelLayout.createSequentialGroup()
                .addComponent(PlayfairInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PlayfairScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PlayfairKeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PlayfairModePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PlayfairTextStylePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(PlayfairOutputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PlayfairExecutePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PlayfairScrollPane.setViewportView(PlayfairScrollPanel);

        StegoPanel.addTab("Playfair", PlayfairScrollPane);

        VigenereScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        VigenereInputLabel.setText("Configure Input");

        VigenereInputButtonGroup.add(VigenereInputModeText);
        VigenereInputModeText.setSelected(true);
        VigenereInputModeText.setText("Text");

        VigenereInputButtonGroup.add(VigenereInputModeFile);
        VigenereInputModeFile.setText("File");
        VigenereInputModeFile.setToolTipText("Fill the text area with the desired filepath");

        VigenereInputTextArea.setColumns(20);
        VigenereInputTextArea.setRows(3);
        VigenereInputScrollPane.setViewportView(VigenereInputTextArea);

        javax.swing.GroupLayout VigeneroInputPanelLayout = new javax.swing.GroupLayout(VigeneroInputPanel);
        VigeneroInputPanel.setLayout(VigeneroInputPanelLayout);
        VigeneroInputPanelLayout.setHorizontalGroup(
            VigeneroInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigeneroInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigeneroInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigenereInputModeFile)
                    .addComponent(VigenereInputModeText)
                    .addComponent(VigenereInputLabel))
                .addGap(18, 18, 18)
                .addComponent(VigenereInputScrollPane)
                .addContainerGap())
        );
        VigeneroInputPanelLayout.setVerticalGroup(
            VigeneroInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigeneroInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigeneroInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigenereInputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(VigeneroInputPanelLayout.createSequentialGroup()
                        .addComponent(VigenereInputLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VigenereInputModeText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VigenereInputModeFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigenereModeLabel.setText("Operation");

        VigenereModeButtonGroup.add(VigenereModeEncrypt);
        VigenereModeEncrypt.setSelected(true);
        VigenereModeEncrypt.setText("Encrypt");

        VigenereModeButtonGroup.add(VigenereModeDecrypt);
        VigenereModeDecrypt.setText("Decrypt");

        javax.swing.GroupLayout VigenereModePanelLayout = new javax.swing.GroupLayout(VigenereModePanel);
        VigenereModePanel.setLayout(VigenereModePanelLayout);
        VigenereModePanelLayout.setHorizontalGroup(
            VigenereModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigenereModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigenereModeDecrypt)
                    .addComponent(VigenereModeLabel)
                    .addComponent(VigenereModeEncrypt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        VigenereModePanelLayout.setVerticalGroup(
            VigenereModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereModeEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereModeDecrypt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigenereKeyLabel.setText("Encryption/Decryption Key");

        VigenereKeyTextArea.setColumns(20);
        VigenereKeyTextArea.setRows(3);
        VigenereKeyScrollPane.setViewportView(VigenereKeyTextArea);

        javax.swing.GroupLayout VigenereKeyPanelLayout = new javax.swing.GroupLayout(VigenereKeyPanel);
        VigenereKeyPanel.setLayout(VigenereKeyPanelLayout);
        VigenereKeyPanelLayout.setHorizontalGroup(
            VigenereKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereKeyPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(VigenereKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VigenereKeyPanelLayout.createSequentialGroup()
                        .addComponent(VigenereKeyScrollPane)
                        .addContainerGap())
                    .addGroup(VigenereKeyPanelLayout.createSequentialGroup()
                        .addComponent(VigenereKeyLabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        VigenereKeyPanelLayout.setVerticalGroup(
            VigenereKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereKeyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereKeyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VigenereKeyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        VigenereTypeLabel.setText("Cipher Mode");

        VigenereTypeButtonGroup.add(VigenereTypeStandard);
        VigenereTypeStandard.setSelected(true);
        VigenereTypeStandard.setText("Standard");

        VigenereTypeButtonGroup.add(VigenereTypeExtended);
        VigenereTypeExtended.setText("Extended");
        VigenereTypeExtended.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                VigenereTypeExtendedStateChanged(evt);
            }
        });

        javax.swing.GroupLayout VigenereTypePanelLayout = new javax.swing.GroupLayout(VigenereTypePanel);
        VigenereTypePanel.setLayout(VigenereTypePanelLayout);
        VigenereTypePanelLayout.setHorizontalGroup(
            VigenereTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereTypeStandard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereTypeExtended)
                .addGap(238, 238, 238))
        );
        VigenereTypePanelLayout.setVerticalGroup(
            VigenereTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereTypePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigenereTypePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VigenereTypeLabel)
                    .addComponent(VigenereTypeStandard)
                    .addComponent(VigenereTypeExtended))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigenereTextStyleLabel.setText("Output Text Style");

        VigenereTextStyleButtonGroup.add(VigenereStyleKeepFormat);
        VigenereStyleKeepFormat.setSelected(true);
        VigenereStyleKeepFormat.setText("Keep Formatting");

        VigenereTextStyleButtonGroup.add(VigenereStyleNoSpace);
        VigenereStyleNoSpace.setText("No Space");

        VigenereTextStyleButtonGroup.add(VigenereStyleSplitByFive);
        VigenereStyleSplitByFive.setText("Split By 5");

        javax.swing.GroupLayout VigenereTextStylePanelLayout = new javax.swing.GroupLayout(VigenereTextStylePanel);
        VigenereTextStylePanel.setLayout(VigenereTextStylePanelLayout);
        VigenereTextStylePanelLayout.setHorizontalGroup(
            VigenereTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereTextStylePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereTextStyleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereStyleKeepFormat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereStyleNoSpace)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereStyleSplitByFive)
                .addGap(22, 22, 22))
        );
        VigenereTextStylePanelLayout.setVerticalGroup(
            VigenereTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereTextStylePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigenereTextStylePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VigenereTextStyleLabel)
                    .addComponent(VigenereStyleKeepFormat)
                    .addComponent(VigenereStyleNoSpace)
                    .addComponent(VigenereStyleSplitByFive))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigenereOutputLabel.setText("Configure Output");

        VigenereOutputButtonGroup.add(VigenereOutputText);
        VigenereOutputText.setSelected(true);
        VigenereOutputText.setText("Text");

        VigenereOutputButtonGroup.add(VigenereOutputFile);
        VigenereOutputFile.setText("File");

        VigenereOutputTextArea.setColumns(20);
        VigenereOutputTextArea.setRows(3);
        VigenereOutputScrollPane.setViewportView(VigenereOutputTextArea);

        javax.swing.GroupLayout VigenereOutputPanelLayout = new javax.swing.GroupLayout(VigenereOutputPanel);
        VigenereOutputPanel.setLayout(VigenereOutputPanelLayout);
        VigenereOutputPanelLayout.setHorizontalGroup(
            VigenereOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigenereOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigenereOutputFile)
                    .addComponent(VigenereOutputText)
                    .addComponent(VigenereOutputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigenereOutputScrollPane)
                .addContainerGap())
        );
        VigenereOutputPanelLayout.setVerticalGroup(
            VigenereOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigenereOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(VigenereOutputScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(VigenereOutputPanelLayout.createSequentialGroup()
                        .addComponent(VigenereOutputLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VigenereOutputText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VigenereOutputFile)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigenereExecuteButton.setText("Execute");
        VigenereExecuteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VigenereExecuteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VigenereExecutePanelLayout = new javax.swing.GroupLayout(VigenereExecutePanel);
        VigenereExecutePanel.setLayout(VigenereExecutePanelLayout);
        VigenereExecutePanelLayout.setHorizontalGroup(
            VigenereExecutePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereExecutePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereExecuteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        VigenereExecutePanelLayout.setVerticalGroup(
            VigenereExecutePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereExecutePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigenereExecuteButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout VigenereScrollPanelLayout = new javax.swing.GroupLayout(VigenereScrollPanel);
        VigenereScrollPanel.setLayout(VigenereScrollPanelLayout);
        VigenereScrollPanelLayout.setHorizontalGroup(
            VigenereScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(VigeneroInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VigenereScrollPanelLayout.createSequentialGroup()
                .addComponent(VigenereModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereKeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(VigenereTextStylePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(VigenereOutputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(VigenereExecutePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(VigenereTypePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        VigenereScrollPanelLayout.setVerticalGroup(
            VigenereScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigenereScrollPanelLayout.createSequentialGroup()
                .addComponent(VigeneroInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VigenereScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VigenereModePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VigenereKeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereTypePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereTextStylePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigenereOutputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(VigenereExecutePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        VigenereScrollPane.setViewportView(VigenereScrollPanel);

        StegoPanel.addTab("Vigenere", VigenereScrollPane);

        VigextScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        VigextInputLabel.setText("Select Input File");

        VigextFileInputButton.setText("Select");
        VigextFileInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VigextFileInputButtonActionPerformed(evt);
            }
        });

        VigextFileInputTextField.setEditable(false);
        VigextFileInputTextField.setText("No File Selected");

        javax.swing.GroupLayout VigextInputPanelLayout = new javax.swing.GroupLayout(VigextInputPanel);
        VigextInputPanel.setLayout(VigextInputPanelLayout);
        VigextInputPanelLayout.setHorizontalGroup(
            VigextInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigextInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VigextInputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VigextFileInputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(VigextFileInputTextField)
                .addContainerGap())
        );
        VigextInputPanelLayout.setVerticalGroup(
            VigextInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigextInputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VigextInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VigextFileInputButton)
                    .addComponent(VigextFileInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigextModeLabel.setText("Operation");

        VigextModeButtonGroup.add(VigextModeEncrypt);
        VigextModeEncrypt.setSelected(true);
        VigextModeEncrypt.setText("Encrypt");

        VigextModeButtonGroup.add(VigextModeDecrypt);
        VigextModeDecrypt.setText("Decrypt");

        javax.swing.GroupLayout VigextModePanelLayout = new javax.swing.GroupLayout(VigextModePanel);
        VigextModePanel.setLayout(VigextModePanelLayout);
        VigextModePanelLayout.setHorizontalGroup(
            VigextModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigextModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigextModeDecrypt)
                    .addComponent(VigextModeLabel)
                    .addComponent(VigextModeEncrypt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        VigextModePanelLayout.setVerticalGroup(
            VigextModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextModePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigextModeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigextModeEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(VigextModeDecrypt)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigextKeyLabel.setText("Encryption/Decryption Key");

        VigextKeyTextArea.setColumns(20);
        VigextKeyTextArea.setRows(3);
        VigextKeyScrollPane.setViewportView(VigextKeyTextArea);

        javax.swing.GroupLayout VigextKeyPanelLayout = new javax.swing.GroupLayout(VigextKeyPanel);
        VigextKeyPanel.setLayout(VigextKeyPanelLayout);
        VigextKeyPanelLayout.setHorizontalGroup(
            VigextKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextKeyPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(VigextKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VigextKeyPanelLayout.createSequentialGroup()
                        .addComponent(VigextKeyScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(VigextKeyPanelLayout.createSequentialGroup()
                        .addComponent(VigextKeyLabel)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        VigextKeyPanelLayout.setVerticalGroup(
            VigextKeyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextKeyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigextKeyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VigextKeyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        VigextOutputLabel.setText("Select Output Folder");

        VigextFileOutputButton.setText("Select");
        VigextFileOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VigextFileOutputButtonActionPerformed(evt);
            }
        });

        VigextFileOutputTextField.setEditable(false);
        VigextFileOutputTextField.setText("Please Set the Output Path");

        javax.swing.GroupLayout VigextOutputPanelLayout = new javax.swing.GroupLayout(VigextOutputPanel);
        VigextOutputPanel.setLayout(VigextOutputPanelLayout);
        VigextOutputPanelLayout.setHorizontalGroup(
            VigextOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigextOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VigextOutputPanelLayout.createSequentialGroup()
                        .addComponent(VigextOutputLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(VigextOutputPanelLayout.createSequentialGroup()
                        .addComponent(VigextFileOutputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(VigextFileOutputTextField)))
                .addContainerGap())
        );
        VigextOutputPanelLayout.setVerticalGroup(
            VigextOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextOutputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(VigextOutputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VigextOutputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VigextFileOutputButton)
                    .addComponent(VigextFileOutputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        VigextExecuteButton1.setText("Execute");
        VigextExecuteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VigextExecuteButton1ActionPerformed(evt);
            }
        });

        VigextStatusTextField.setEditable(false);
        VigextStatusTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        VigextStatusTextField.setText("Waiting Command");

        javax.swing.GroupLayout VigextExecutePanel1Layout = new javax.swing.GroupLayout(VigextExecutePanel1);
        VigextExecutePanel1.setLayout(VigextExecutePanel1Layout);
        VigextExecutePanel1Layout.setHorizontalGroup(
            VigextExecutePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextExecutePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(VigextExecutePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigextExecuteButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
                    .addComponent(VigextStatusTextField))
                .addContainerGap())
        );
        VigextExecutePanel1Layout.setVerticalGroup(
            VigextExecutePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, VigextExecutePanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VigextStatusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigextExecuteButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout VigextScrollPanelLayout = new javax.swing.GroupLayout(VigextScrollPanel);
        VigextScrollPanel.setLayout(VigextScrollPanelLayout);
        VigextScrollPanelLayout.setHorizontalGroup(
            VigextScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(VigextInputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(VigextScrollPanelLayout.createSequentialGroup()
                .addComponent(VigextModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigextKeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(VigextOutputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(VigextExecutePanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        VigextScrollPanelLayout.setVerticalGroup(
            VigextScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VigextScrollPanelLayout.createSequentialGroup()
                .addComponent(VigextInputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VigextScrollPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VigextModePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VigextKeyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigextOutputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 599, Short.MAX_VALUE)
                .addComponent(VigextExecutePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        VigextScrollPane.setViewportView(VigextScrollPanel);

        StegoPanel.addTab("BinaryFile", VigextScrollPane);

        StegoImagePanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        StegoImageLabel3.setText("Stego Image");

        javax.swing.GroupLayout StegoImagePanel3Layout = new javax.swing.GroupLayout(StegoImagePanel3);
        StegoImagePanel3.setLayout(StegoImagePanel3Layout);
        StegoImagePanel3Layout.setHorizontalGroup(
            StegoImagePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StegoImagePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StegoImagePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StegoImageView3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(StegoImagePanel3Layout.createSequentialGroup()
                        .addComponent(StegoImageLabel3)
                        .addGap(0, 188, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StegoImagePanel3Layout.setVerticalGroup(
            StegoImagePanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StegoImagePanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StegoImageLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StegoImageView3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        CoverImagePanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        CoverImageLabel1.setText("Cover Image");

        javax.swing.GroupLayout CoverImagePanel1Layout = new javax.swing.GroupLayout(CoverImagePanel1);
        CoverImagePanel1.setLayout(CoverImagePanel1Layout);
        CoverImagePanel1Layout.setHorizontalGroup(
            CoverImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoverImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CoverImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CoverImageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(CoverImagePanel1Layout.createSequentialGroup()
                        .addComponent(CoverImageLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        CoverImagePanel1Layout.setVerticalGroup(
            CoverImagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoverImagePanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CoverImageLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoverImageView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ImageViewPanel3Layout = new javax.swing.GroupLayout(ImageViewPanel3);
        ImageViewPanel3.setLayout(ImageViewPanel3Layout);
        ImageViewPanel3Layout.setHorizontalGroup(
            ImageViewPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ImageViewPanel3Layout.createSequentialGroup()
                .addComponent(CoverImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StegoImagePanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ImageViewPanel3Layout.setVerticalGroup(
            ImageViewPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StegoImagePanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(CoverImagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        InputPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        InputLabel1.setText("Input");

        TextInputLabel1.setText("Select Text Input File");

        TextInputButton1.setText("Select");
        TextInputButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextInputButton1ActionPerformed(evt);
            }
        });

        TextInputInfo1.setEditable(false);
        TextInputInfo1.setText("No File Selected");

        javax.swing.GroupLayout TextInputPanel1Layout = new javax.swing.GroupLayout(TextInputPanel1);
        TextInputPanel1.setLayout(TextInputPanel1Layout);
        TextInputPanel1Layout.setHorizontalGroup(
            TextInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextInputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TextInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TextInputPanel1Layout.createSequentialGroup()
                        .addComponent(TextInputLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(TextInputPanel1Layout.createSequentialGroup()
                        .addComponent(TextInputButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TextInputInfo1)))
                .addContainerGap())
        );
        TextInputPanel1Layout.setVerticalGroup(
            TextInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextInputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextInputLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TextInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextInputButton1)
                    .addComponent(TextInputInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CoverInputLabel2.setText("Select Cover Image");

        CoverInputButton1.setText("Select");
        CoverInputButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoverInputButton1ActionPerformed(evt);
            }
        });

        CoverInputInfo1.setEditable(false);
        CoverInputInfo1.setText("No File Selected");

        javax.swing.GroupLayout CoverInputPanel2Layout = new javax.swing.GroupLayout(CoverInputPanel2);
        CoverInputPanel2.setLayout(CoverInputPanel2Layout);
        CoverInputPanel2Layout.setHorizontalGroup(
            CoverInputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoverInputPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CoverInputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CoverInputLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CoverInputButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(CoverInputInfo1)
                .addContainerGap())
        );
        CoverInputPanel2Layout.setVerticalGroup(
            CoverInputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoverInputPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CoverInputLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CoverInputPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoverInputButton1)
                    .addComponent(CoverInputInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        KeyLabel1.setText("Stego Key");

        KeyTextArea1.setColumns(20);
        KeyTextArea1.setRows(3);
        VigextKeyScrollPane10.setViewportView(KeyTextArea1);

        javax.swing.GroupLayout KeyPanel1Layout = new javax.swing.GroupLayout(KeyPanel1);
        KeyPanel1.setLayout(KeyPanel1Layout);
        KeyPanel1Layout.setHorizontalGroup(
            KeyPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(KeyPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VigextKeyScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addGroup(KeyPanel1Layout.createSequentialGroup()
                        .addComponent(KeyLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        KeyPanel1Layout.setVerticalGroup(
            KeyPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(KeyPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(KeyLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VigextKeyScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addContainerGap())
        );

        TresholdLabel1.setText("Treshold");

        javax.swing.GroupLayout TresholdPanel1Layout = new javax.swing.GroupLayout(TresholdPanel1);
        TresholdPanel1.setLayout(TresholdPanel1Layout);
        TresholdPanel1Layout.setHorizontalGroup(
            TresholdPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TresholdPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TresholdLabel1)
                .addGap(18, 18, 18)
                .addComponent(TresholdTextField1)
                .addContainerGap())
        );
        TresholdPanel1Layout.setVerticalGroup(
            TresholdPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TresholdPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TresholdPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TresholdTextField1)
                    .addComponent(TresholdLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OptionsLabel1.setText("Options");

        EncryptOptionCheckBox1.setText("Encrypt Message");

        CGCOptionCheckBox1.setText("Convert Image to CGC");

        MessageEmbeddingLabel1.setText("Message Embedding");

        SequentialRadioButton1.setText("Sequential");

        RandomRadioButton1.setText("Random");

        javax.swing.GroupLayout MessageEmbeddingPanel1Layout = new javax.swing.GroupLayout(MessageEmbeddingPanel1);
        MessageEmbeddingPanel1.setLayout(MessageEmbeddingPanel1Layout);
        MessageEmbeddingPanel1Layout.setHorizontalGroup(
            MessageEmbeddingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MessageEmbeddingPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MessageEmbeddingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MessageEmbeddingPanel1Layout.createSequentialGroup()
                        .addComponent(MessageEmbeddingLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MessageEmbeddingPanel1Layout.createSequentialGroup()
                        .addComponent(SequentialRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                        .addComponent(RandomRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        MessageEmbeddingPanel1Layout.setVerticalGroup(
            MessageEmbeddingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MessageEmbeddingPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MessageEmbeddingLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MessageEmbeddingPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SequentialRadioButton1)
                    .addComponent(RandomRadioButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout OptionsPanel1Layout = new javax.swing.GroupLayout(OptionsPanel1);
        OptionsPanel1.setLayout(OptionsPanel1Layout);
        OptionsPanel1Layout.setHorizontalGroup(
            OptionsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OptionsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MessageEmbeddingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(OptionsPanel1Layout.createSequentialGroup()
                        .addComponent(OptionsLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(EncryptOptionCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CGCOptionCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        OptionsPanel1Layout.setVerticalGroup(
            OptionsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionsPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OptionsLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EncryptOptionCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CGCOptionCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MessageEmbeddingPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout InputPanel1Layout = new javax.swing.GroupLayout(InputPanel1);
        InputPanel1.setLayout(InputPanel1Layout);
        InputPanel1Layout.setHorizontalGroup(
            InputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextInputPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CoverInputPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputPanel1Layout.createSequentialGroup()
                        .addGroup(InputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(InputLabel1)
                            .addComponent(KeyPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TresholdPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OptionsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        InputPanel1Layout.setVerticalGroup(
            InputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InputLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CoverInputPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextInputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(InputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(InputPanel1Layout.createSequentialGroup()
                        .addComponent(KeyPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TresholdPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(OptionsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        OutputPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        OutputLabel1.setText("Output");

        StegoInputLabel1.setText("Select Stego Image");

        StegoInputButton1.setText("Select");
        StegoInputButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StegoInputButton1ActionPerformed(evt);
            }
        });

        StegoInputInfo1.setEditable(false);
        StegoInputInfo1.setText("No File Selected");

        javax.swing.GroupLayout StegoInputPanel1Layout = new javax.swing.GroupLayout(StegoInputPanel1);
        StegoInputPanel1.setLayout(StegoInputPanel1Layout);
        StegoInputPanel1Layout.setHorizontalGroup(
            StegoInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StegoInputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StegoInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(StegoInputLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StegoInputButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(StegoInputInfo1)
                .addContainerGap())
        );
        StegoInputPanel1Layout.setVerticalGroup(
            StegoInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StegoInputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(StegoInputLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(StegoInputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StegoInputButton1)
                    .addComponent(StegoInputInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TextOutputLabel1.setText("Select Text Output File");

        TextOutputButton1.setText("Select");
        TextOutputButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextOutputButton1ActionPerformed(evt);
            }
        });

        TextOutputInfo1.setEditable(false);
        TextOutputInfo1.setText("No File Selected");

        javax.swing.GroupLayout TextOutputPanel1Layout = new javax.swing.GroupLayout(TextOutputPanel1);
        TextOutputPanel1.setLayout(TextOutputPanel1Layout);
        TextOutputPanel1Layout.setHorizontalGroup(
            TextOutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextOutputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TextOutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TextOutputPanel1Layout.createSequentialGroup()
                        .addComponent(TextOutputLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(TextOutputPanel1Layout.createSequentialGroup()
                        .addComponent(TextOutputButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TextOutputInfo1)))
                .addContainerGap())
        );
        TextOutputPanel1Layout.setVerticalGroup(
            TextOutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TextOutputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TextOutputLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TextOutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextOutputButton1)
                    .addComponent(TextOutputInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout OutputPanel1Layout = new javax.swing.GroupLayout(OutputPanel1);
        OutputPanel1.setLayout(OutputPanel1Layout);
        OutputPanel1Layout.setHorizontalGroup(
            OutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OutputPanel1Layout.createSequentialGroup()
                        .addComponent(OutputLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(TextOutputPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(StegoInputPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        OutputPanel1Layout.setVerticalGroup(
            OutputPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OutputPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(OutputLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(StegoInputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextOutputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EncryptButton1.setText("Embed");

        DecryptButton1.setText("Extract");

        javax.swing.GroupLayout EncryptDecryptPanel1Layout = new javax.swing.GroupLayout(EncryptDecryptPanel1);
        EncryptDecryptPanel1.setLayout(EncryptDecryptPanel1Layout);
        EncryptDecryptPanel1Layout.setHorizontalGroup(
            EncryptDecryptPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EncryptDecryptPanel1Layout.createSequentialGroup()
                .addComponent(EncryptButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DecryptButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        EncryptDecryptPanel1Layout.setVerticalGroup(
            EncryptDecryptPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EncryptDecryptPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(EncryptDecryptPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EncryptButton1)
                    .addComponent(DecryptButton1)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(EncryptDecryptPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ImageViewPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(OutputPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(InputPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(ImageViewPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OutputPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EncryptDecryptPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel4);

        StegoPanel.addTab("BPCS Stega", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StegoPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(StegoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextOutputButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextOutputButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextOutputButton1ActionPerformed

    private void StegoInputButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StegoInputButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_StegoInputButton1ActionPerformed

    private void CoverInputButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoverInputButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoverInputButton1ActionPerformed

    private void TextInputButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextInputButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextInputButton1ActionPerformed

    private void VigextExecuteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VigextExecuteButton1ActionPerformed
        VigextStatusTextField.setText("Processing...");
        VigextExecuteButton1.setEnabled(false);

        if(VigextFileInputPath.isEmpty()) {
            VigextFileInputTextField.setText("Please Set the Input File");
        }
        if(VigextFileOutputPath.isEmpty()) {
            VigextFileOutputTextField.setText("Please Set the Output Path");
        }

        if(!(VigextFileInputPath.isEmpty() || VigextFileOutputPath.isEmpty())) {

            String key = VigextKeyTextArea.getText();
            if(key.isEmpty()) {
                VigextKeyTextArea.setText("Please input the cipher key");
            } else {

                SwingWorker worker = new SwingWorker<Void, Void>(){
                    @Override
                    protected Void doInBackground() throws Exception {
                        Path in = Paths.get(VigextFileInputPath);
                        Path out = Paths.get(VigextFileOutputPath);

                        VigenereExtended cipher = new VigenereExtended(key);

                        boolean success;
                        if(VigextModeDecrypt.isSelected()) {
                            success = cipher.DecipherFile(in, out);
                        } else {
                            success = cipher.EnchiperFile(in, out);
                        }

                        if(success) {
                            VigextStatusTextField.setText("Operation completed!");
                        } else {
                            VigextStatusTextField.setText("Operation failed");
                        }
                        VigextExecuteButton1.setEnabled(true);

                        return null;
                    }
                };

                worker.execute();
            }
        }
    }//GEN-LAST:event_VigextExecuteButton1ActionPerformed

    private void VigextFileOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VigextFileOutputButtonActionPerformed
        int returnVal = CipherFileChooser.showSaveDialog(StegoPanel);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = CipherFileChooser.getSelectedFile();
            VigextFileOutputPath = file.getAbsolutePath();
            VigextFileOutputTextField.setText(file.getAbsolutePath());
        } else {
            VigextFileOutputPath = "";
            VigextFileOutputTextField.setText("No File Selected");
        }
    }//GEN-LAST:event_VigextFileOutputButtonActionPerformed

    private void VigextFileInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VigextFileInputButtonActionPerformed
        int returnVal = CipherFileChooser.showOpenDialog(StegoPanel);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = CipherFileChooser.getSelectedFile();
            VigextFileInputPath = file.getAbsolutePath();
            VigextFileInputTextField.setText(file.getAbsolutePath());
        } else {
            VigextFileInputPath = "";
            VigextFileInputTextField.setText("No File Selected");
        }
    }//GEN-LAST:event_VigextFileInputButtonActionPerformed

    private void VigenereExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VigenereExecuteButtonActionPerformed
        String input = "";
        if(VigenereInputModeFile.isSelected()) {
            input = Utils.ReadTextFile(VigenereInputTextArea.getText());
        } else if(VigenereInputModeText.isSelected()) {
            input = VigenereInputTextArea.getText();
        }

        if(input.isEmpty()) {
            VigenereInputTextArea.setText("Please make sure the input is not empty");
        } else {

            String key = VigenereKeyTextArea.getText();
            if(key.isEmpty()) {
                VigenereKeyTextArea.setText("Please input the cipher key");
            } else {

                VigenereCipher cipher;
                if(VigenereTypeStandard.isSelected()) {
                    cipher = new VigenereStandard(key);
                } else {
                    cipher = new VigenereExtended(key);
                }

                String output = "";
                if(VigenereModeDecrypt.isSelected()) {
                    output = cipher.Decipher(input);
                } else if(VigenereModeEncrypt.isSelected()) {
                    output = cipher.Encipher(input);
                }

                if(VigenereTypeStandard.isSelected()) {
                    if(VigenereStyleKeepFormat.isSelected()) {
                        output = Utils.FormatCopy(output, input);
                    } else if(VigenereStyleSplitByFive.isSelected()) {
                        output = Utils.FormatSplitBy(output,5);
                    }
                }

                if(VigenereOutputFile.isSelected()) {
                    boolean success = Utils.SaveTextFile(VigenereOutputTextArea.getText(), output);
                    if(success) {
                        VigenereOutputTextArea.setText("SUCCESS!");
                    }

                } else if(VigenereOutputText.isSelected()) {
                    VigenereOutputTextArea.setText(output);
                }
            }
        }
    }//GEN-LAST:event_VigenereExecuteButtonActionPerformed

    private void VigenereTypeExtendedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_VigenereTypeExtendedStateChanged
        if(VigenereTypeExtended.isSelected()) {
            VigenereTextStyleLabel.setEnabled(false);
            VigenereStyleKeepFormat.setEnabled(false);
            VigenereStyleNoSpace.setEnabled(false);
            VigenereStyleSplitByFive.setEnabled(false);
        } else {
            VigenereTextStyleLabel.setEnabled(true);
            VigenereStyleKeepFormat.setEnabled(true);
            VigenereStyleNoSpace.setEnabled(true);
            VigenereStyleSplitByFive.setEnabled(true);	}
    }//GEN-LAST:event_VigenereTypeExtendedStateChanged

    private void PlayfairExecuteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayfairExecuteButtonActionPerformed
        String input = "";
        if(PlayfairInputModeFile.isSelected()) {
            input = Utils.ReadTextFile(PlayfairInputTextArea.getText());
        } else if(PlayfairInputModeText.isSelected()) {
            input = PlayfairInputTextArea.getText();
        }

        if(input.isEmpty()) {
            PlayfairInputTextArea.setText("Please make sure the input is not empty");
        } else {

            char[][] key = new char[5][5];
            for(int i=0; i<5; i++) {
                for(int j=0; j<5; j++) {
                    key[i][j] = ((String)PlayfairKeyTable.getModel().getValueAt(i, j)).charAt(0);
                }
            }

            PlayfairCipher cipher = new PlayfairCipher(key);

            String output = "";
            if(PlayfairModeDecrypt.isSelected()) {
                output = cipher.Decipher(input);
            } else if(PlayfairModeEncrypt.isSelected()) {
                output = cipher.Encipher(input);
            }

            if(PlayfairStyleSplitByFive.isSelected()) {
                output = Utils.FormatSplitBy(output,5);
            } else if(PlayfairStyleSplitByTwo.isSelected()) {
                output = Utils.FormatSplitBy(output, 2);
            }

            if(PlayfairOutputFile.isSelected()) {
                boolean success = Utils.SaveTextFile(PlayfairOutputTextArea.getText(), output);
                if(success) {
                    PlayfairOutputTextArea.setText("SUCCESS!");
                }

            } else if(PlayfairOutputText.isSelected()) {
                PlayfairOutputTextArea.setText(output);
            }

        }
    }//GEN-LAST:event_PlayfairExecuteButtonActionPerformed
    
    private String VigextFileInputPath = "";
    private String VigextFileOutputPath = "";
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Windows look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Windows".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(CipherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(() -> {
	    new CipherGUI().setVisible(true);
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CGCOptionCheckBox1;
    private javax.swing.JFileChooser CipherFileChooser;
    private javax.swing.JLabel CoverImageLabel1;
    private javax.swing.JPanel CoverImagePanel1;
    private javax.swing.JLabel CoverImageView1;
    private javax.swing.JButton CoverInputButton1;
    private javax.swing.JTextField CoverInputInfo1;
    private javax.swing.JLabel CoverInputLabel2;
    private javax.swing.JPanel CoverInputPanel2;
    private javax.swing.JButton DecryptButton1;
    private javax.swing.JButton EncryptButton1;
    private javax.swing.JPanel EncryptDecryptPanel1;
    private javax.swing.JCheckBox EncryptOptionCheckBox1;
    private javax.swing.JPanel ImageViewPanel;
    private javax.swing.JPanel ImageViewPanel1;
    private javax.swing.JPanel ImageViewPanel3;
    private javax.swing.JLabel InputLabel1;
    private javax.swing.JPanel InputPanel1;
    private javax.swing.JLabel KeyLabel1;
    private javax.swing.JPanel KeyPanel1;
    private javax.swing.JTextArea KeyTextArea1;
    private javax.swing.JLabel MessageEmbeddingLabel1;
    private javax.swing.JPanel MessageEmbeddingPanel1;
    private javax.swing.JLabel OptionsLabel1;
    private javax.swing.JPanel OptionsPanel1;
    private javax.swing.JLabel OutputLabel1;
    private javax.swing.JPanel OutputPanel1;
    private javax.swing.JButton PlayfairExecuteButton;
    private javax.swing.JPanel PlayfairExecutePanel;
    private javax.swing.ButtonGroup PlayfairInputButtonGroup;
    private javax.swing.JLabel PlayfairInputLabel;
    private javax.swing.JRadioButton PlayfairInputModeFile;
    private javax.swing.JRadioButton PlayfairInputModeText;
    private javax.swing.JPanel PlayfairInputPanel;
    private javax.swing.JScrollPane PlayfairInputScrollPane;
    private javax.swing.JTextArea PlayfairInputTextArea;
    private javax.swing.JLabel PlayfairKeyLabel;
    private javax.swing.JPanel PlayfairKeyPanel;
    private javax.swing.JTable PlayfairKeyTable;
    private javax.swing.ButtonGroup PlayfairModeButtonGroup;
    private javax.swing.JRadioButton PlayfairModeDecrypt;
    private javax.swing.JRadioButton PlayfairModeEncrypt;
    private javax.swing.JLabel PlayfairModeLabel;
    private javax.swing.JPanel PlayfairModePanel;
    private javax.swing.ButtonGroup PlayfairOutputButtonGroup;
    private javax.swing.JRadioButton PlayfairOutputFile;
    private javax.swing.JLabel PlayfairOutputLabel;
    private javax.swing.JPanel PlayfairOutputPanel;
    private javax.swing.JScrollPane PlayfairOutputScrollPane;
    private javax.swing.JRadioButton PlayfairOutputText;
    private javax.swing.JTextArea PlayfairOutputTextArea;
    private javax.swing.JScrollPane PlayfairScrollPane;
    private javax.swing.JPanel PlayfairScrollPanel;
    private javax.swing.JRadioButton PlayfairStyleNoSpace;
    private javax.swing.JRadioButton PlayfairStyleSplitByFive;
    private javax.swing.JRadioButton PlayfairStyleSplitByTwo;
    private javax.swing.ButtonGroup PlayfairTextStyleButtonGroup;
    private javax.swing.JLabel PlayfairTextStyleLabel;
    private javax.swing.JPanel PlayfairTextStylePanel;
    private javax.swing.JRadioButton RandomRadioButton1;
    private javax.swing.JRadioButton SequentialRadioButton1;
    private javax.swing.JLabel StegoImageLabel;
    private javax.swing.JLabel StegoImageLabel1;
    private javax.swing.JLabel StegoImageLabel3;
    private javax.swing.JPanel StegoImagePanel;
    private javax.swing.JPanel StegoImagePanel1;
    private javax.swing.JPanel StegoImagePanel3;
    private javax.swing.JLabel StegoImageView;
    private javax.swing.JLabel StegoImageView1;
    private javax.swing.JLabel StegoImageView3;
    private javax.swing.JButton StegoInputButton1;
    private javax.swing.JTextField StegoInputInfo1;
    private javax.swing.JLabel StegoInputLabel1;
    private javax.swing.JPanel StegoInputPanel1;
    private javax.swing.JTabbedPane StegoPanel;
    private javax.swing.JButton TextInputButton1;
    private javax.swing.JTextField TextInputInfo1;
    private javax.swing.JLabel TextInputLabel1;
    private javax.swing.JPanel TextInputPanel1;
    private javax.swing.JButton TextOutputButton1;
    private javax.swing.JTextField TextOutputInfo1;
    private javax.swing.JLabel TextOutputLabel1;
    private javax.swing.JPanel TextOutputPanel1;
    private javax.swing.JLabel TresholdLabel1;
    private javax.swing.JPanel TresholdPanel1;
    private javax.swing.JTextField TresholdTextField1;
    private javax.swing.JButton VigenereExecuteButton;
    private javax.swing.JPanel VigenereExecutePanel;
    private javax.swing.ButtonGroup VigenereInputButtonGroup;
    private javax.swing.JLabel VigenereInputLabel;
    private javax.swing.JRadioButton VigenereInputModeFile;
    private javax.swing.JRadioButton VigenereInputModeText;
    private javax.swing.JScrollPane VigenereInputScrollPane;
    private javax.swing.JTextArea VigenereInputTextArea;
    private javax.swing.JLabel VigenereKeyLabel;
    private javax.swing.JPanel VigenereKeyPanel;
    private javax.swing.JScrollPane VigenereKeyScrollPane;
    private javax.swing.JTextArea VigenereKeyTextArea;
    private javax.swing.ButtonGroup VigenereModeButtonGroup;
    private javax.swing.JRadioButton VigenereModeDecrypt;
    private javax.swing.JRadioButton VigenereModeEncrypt;
    private javax.swing.JLabel VigenereModeLabel;
    private javax.swing.JPanel VigenereModePanel;
    private javax.swing.ButtonGroup VigenereOutputButtonGroup;
    private javax.swing.JRadioButton VigenereOutputFile;
    private javax.swing.JLabel VigenereOutputLabel;
    private javax.swing.JPanel VigenereOutputPanel;
    private javax.swing.JScrollPane VigenereOutputScrollPane;
    private javax.swing.JRadioButton VigenereOutputText;
    private javax.swing.JTextArea VigenereOutputTextArea;
    private javax.swing.JScrollPane VigenereScrollPane;
    private javax.swing.JPanel VigenereScrollPanel;
    private javax.swing.JRadioButton VigenereStyleKeepFormat;
    private javax.swing.JRadioButton VigenereStyleNoSpace;
    private javax.swing.JRadioButton VigenereStyleSplitByFive;
    private javax.swing.ButtonGroup VigenereTextStyleButtonGroup;
    private javax.swing.JLabel VigenereTextStyleLabel;
    private javax.swing.JPanel VigenereTextStylePanel;
    private javax.swing.ButtonGroup VigenereTypeButtonGroup;
    private javax.swing.JRadioButton VigenereTypeExtended;
    private javax.swing.JLabel VigenereTypeLabel;
    private javax.swing.JPanel VigenereTypePanel;
    private javax.swing.JRadioButton VigenereTypeStandard;
    private javax.swing.JPanel VigeneroInputPanel;
    private javax.swing.JButton VigextExecuteButton1;
    private javax.swing.JPanel VigextExecutePanel1;
    private javax.swing.JButton VigextFileInputButton;
    private javax.swing.JTextField VigextFileInputTextField;
    private javax.swing.JButton VigextFileOutputButton;
    private javax.swing.JTextField VigextFileOutputTextField;
    private javax.swing.JLabel VigextInputLabel;
    private javax.swing.JPanel VigextInputPanel;
    private javax.swing.JLabel VigextKeyLabel;
    private javax.swing.JPanel VigextKeyPanel;
    private javax.swing.JScrollPane VigextKeyScrollPane;
    private javax.swing.JScrollPane VigextKeyScrollPane10;
    private javax.swing.JTextArea VigextKeyTextArea;
    private javax.swing.ButtonGroup VigextModeButtonGroup;
    private javax.swing.JRadioButton VigextModeDecrypt;
    private javax.swing.JRadioButton VigextModeEncrypt;
    private javax.swing.JLabel VigextModeLabel;
    private javax.swing.JPanel VigextModePanel;
    private javax.swing.JLabel VigextOutputLabel;
    private javax.swing.JPanel VigextOutputPanel;
    private javax.swing.JScrollPane VigextScrollPane;
    private javax.swing.JPanel VigextScrollPanel;
    private javax.swing.JTextField VigextStatusTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
